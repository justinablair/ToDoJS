{"id":"../node_modules/core-js/internals/function-call.js","dependencies":[{"name":"/Users/justinablair/todoJS/package.json","includedInParent":true,"mtime":1649075486594},{"name":"/Users/justinablair/todoJS/node_modules/core-js/package.json","includedInParent":true,"mtime":1649075485476},{"name":"../internals/function-bind-native","loc":{"line":1,"column":26,"index":26},"parent":"/Users/justinablair/todoJS/node_modules/core-js/internals/function-call.js","resolved":"/Users/justinablair/todoJS/node_modules/core-js/internals/function-bind-native.js"}],"generated":{"js":"var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/internals/function-call.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../node_modules/core-js/internals/function-call.js":"var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n"},"lineCount":8}},"error":null,"hash":"4400401b07d8b38e34956c1cb5074581","cacheData":{"env":{}}}